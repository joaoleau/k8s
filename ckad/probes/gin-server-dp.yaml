apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gin-server
  name: gin-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gin-server
  strategy: {}

  template:
    metadata:
      labels:
        app: gin-server
    spec:
      containers:
      - image: gin-server:latest
        name: gin-server
        imagePullPolicy: IfNotPresent

        lifecycle:
          preStop:
            httpGet:
              path: /prestop
              port: 3000

        startupProbe:
          httpGet:
            path: /start?max=2 #Endpoint que será feito o GET
            port: 3000 #Porta que esta rodando nosso container http com endpoint
          failureThreshold: 2 #Qtd de falhas pra considerar aplicação indisponivel
          periodSeconds: 2 #Intervalo de tempo entre checks

        livenessProbe:
          httpGet:
            path: /healthz?max=2 
            port: 3000 
          initialDelaySeconds: 3 #Tempo para iniciar primeiro check
          periodSeconds: 5 
          failureThreshold: 2
          terminationGracePeriodSeconds: 5 #Tempo para aplicação ser encerrada

        readinessProbe:
          httpGet:
            path: /readiness
            port: 3000
          periodSeconds: 5
          successThreshold: 3 #Qtd de sucesso pra considerar aplicação disponivel

        env:
          - name: GIN_MODE
            value: release
          - name: KEY_APP_URL
            value: "http://key-app.default.svc.cluster.local"
        
        ports:
        - containerPort: 3000
        resources: {}
status: {}